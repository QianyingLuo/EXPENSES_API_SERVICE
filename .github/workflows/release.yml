name: Release

on:
  workflow_dispatch:

jobs:

  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      NEXT_RELEASE: ${{ env.NEXT_RELEASE }}
      VERSION: ${{ env.VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
  
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
  
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev
 
      - name: Get version
        run: echo "::set-env name=PROJECT_VERSION::$(grep 'VERSION =' config/config.py | cut -d'"' -f2)"
  
      - name: Display Version
        run: echo "Project Version: ${{ env.PROJECT_VERSION }}"

  #upload-artifacts:
  #  runs-on: ubuntu-latest
  #  permissions:
  #    contents: write
  #    packages: write
  #  needs: [ prepare-release ]
  #  env:
  #    NEXT_RELEASE: ${{ needs.prepare-release.outputs.NEXT_RELEASE }}
  #    VERSION: ${{ needs.prepare-release.outputs.VERSION }}
  #  steps:
  #    - uses: actions/checkout@v3
  #      with:
  #        ref: ${{ env.NEXT_RELEASE }}
#
  #    - uses: actions/setup-python@v2
  #      with:
  #        python-version: "3.11"
#
  #    - name: Configure Git User
  #      run: |
  #        git config user.email "actions@github.com"
  #        git config user.name "GitHub Actions"
#
  #    - name: Build
  #      run: ./mvnw --batch-mode package
#
#
  #    - name: Login to Docker Hub
  #      uses: docker/login-action@v2
  #      with:
  #        username: ${{ secrets.DOCKER_USERNAME }}
  #        password: ${{ secrets.DOCKER_PASSWORD }}
#
  #    - name: Build & push
  #      uses: docker/build-push-action@v3
  #      with:
  #        context: .
  #        dockerfile: Dockerfile
  #        push: true
  #        tags: ${{ secrets.DOCKER_USERNAME }}/expenses-api:${{ env.NEXT_RELEASE }}
#
  #    - name: Create GitHub Release
  #      uses: ncipollo/release-action@v1.12.0
  #      with:
  #        tag: ${{ env.NEXT_RELEASE }}
  #        token: ${{ secrets.GH_TOKEN }}
  #