name: Release
on:
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    permissions: 
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
  
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
  
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev
                  
      - name: Configure Git User
        run: | 
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      
      - name: Get project version
        run: |
          VERSION=$(grep 'VERSION = ' ./src/config/version.py | cut -d'"' -f2 | sed 's/-SNAPSHOT//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Get next version
        run: |
          current_version=$(grep 'VERSION = ' ./src/config/version.py | cut -d'"' -f2)
          next_version=$(echo $current_version | awk -F'.' '{print $3}' | awk -F'-' '{print $1 + 1}')
          NEXT_VERSION=$(echo $current_version | sed "s/\([0-9]\+\)-SNAPSHOT$/$next_version-SNAPSHOT/")
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV

      - name: Update version remote
        run: |
          rm ./src/config/version.py
          echo 'VERSION = "${{ env.NEXT_VERSION }}"' > ./src/config/version.py
          git add .
          git commit -m "chore: prepare snapshot"
          git push

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push
        uses: docker/build-push-action@v3
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/expenses-api:${{ env.VERSION }}

